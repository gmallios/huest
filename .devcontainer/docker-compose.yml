version: '3.7'
services:

  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic"
    labels:
      - traefik.http.routers.traefik=true
      - traefik.http.routers.traefik.tls=true
    ports:
      - "80:80" # web router entrypoint
      - "443:443" # ssl
      - "8080:8080" # traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ../certs-traefik.yaml:/etc/traefik/dynamic/certs-traefik.yaml
      - ../ssl:/etc/certs

    networks:
      - devnet

  # Update this to the name of the service you want to work with in your docker-compose.yml file
  huest:
    container_name: huest
    # If you want add a non-root user to your Dockerfile, you can use the "remoteUser"
    # property in devcontainer.json to cause VS Code its sub-processes (terminals, tasks, 
    # debugging) to execute as the user. Uncomment the next line if you want the entire 
    # container to run as this user instead. Note that, on Linux, you may need to 
    # ensure the UID and GID of the container user you create matches your local user. 
    # See https://aka.ms/vscode-remote/containers/non-root for details.
    #
    # user: vscode

    build:
      context: ..
      dockerfile: Dockerfile

    volumes:
      - ../:/workspace:cached

    ports:
      - 1900:1900 # SSDP

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.huest.tls=true" # Force TLS
      - "traefik.http.routers.huest.rule=Host(`huest.mba.com')"
      - "traefik.http.routers.huest.entrypoints=websecure"
      - "traefik.http.routers.huest_http.rule=Host(`huest.mba.com`)"
      - "traefik.http.routers.huest_http.entrypoints=web"
      - "traefik.docker.network=devnet"
      - "traefik.http.services.huest.loadbalancer.server.port=8000"
    networks:
      - devnet
    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"

networks:
  devnet:
